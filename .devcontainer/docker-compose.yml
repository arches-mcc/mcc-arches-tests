version: '3'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        # ARG with FROM are not working with devcontainers
        # [Choice] Python version: 3, 3.8, 3.7, 3.6
        # VARIANT: 3
        # # [Choice] Node.js version: none, node, lts/*, 16, 14, 12, 10
        # NODE_VERSION: "node"
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        # USER_UID: 1000
        # USER_GID: 1000
        USER_UID: 0
        USER_GID: 0

    # Uncomment the next line to use a non-root user for all processes. USER_UID, USER_GID > 0
    # user: vscode

    volumes:
      - ..:/workspaces:cached
    env_file:
      - ./devcontainer.env

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:arches_db_dev
    networks:
      - arches_dev_net

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  arches_db_dev:
    # container_name: arches_db_dev
    image: postgis/postgis:16-3.4-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - postgres-log:/var/log/postgresql
      - ../setup\postgis\init-unix.sql:/docker-entrypoint-initdb.d/init.sql # to set up the DB template
      # - ./arches/arches_data/:/arches_data
    # https://github.com/postgis/docker-postgis/blob/master/README.md#supported-environment-variables
    env_file:
      - ./devcontainer.env
    # secrets:
    #   - PGPASSWORD
    environment:
      # - POSTGRES_PASSWORD_FILE=/run/secrets/PGPASSWORD
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,postgis_topology
    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)
    # ports:
    #   - '5434:5432'
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - arches_dev_net

  arches_elasticsearch_dev:
    # container_name: arches_elasticsearch
    image: elasticsearch:8.12.2
    restart: unless-stopped
    env_file:
      - ./devcontainer.env
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms400m -Xmx400m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    # ports:
    #   - "9202:9200"
    #   - "9302:9300"
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - arches_dev_net

  arches_redis_dev:
    # container_name: arches_redis_dev
    image: "redis:7-alpine"
    restart: unless-stopped
    # ports:
    #   - "6379:6379"
    volumes:
      - "redis-data:/data"
    env_file:
      - ./devcontainer.env
    command: "redis-server"
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"
    networks:
      - arches_dev_net

secrets:
  PGPASSWORD:
    environment: "USERNAME"

networks:
  arches_dev_net:
    driver: bridge
    name: arches_dev_net

volumes:
  postgres-data:
  postgres-log:
  elasticsearch-data:
  redis-data:
